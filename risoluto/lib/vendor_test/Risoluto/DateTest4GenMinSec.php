<?php
/**
 * DateTest4GenMinSec
 *
 * Date::GenMinSec用テストケース
 *
 * @package           risoluto
 * @author            Risoluto Developers
 * @license           http://opensource.org/licenses/bsd-license.php new BSD license
 * @copyright     (C) 2008-2014 Risoluto Developers / All Rights Reserved.
 */

//------------------------------------------------------//
// 名前空間の定義
//------------------------------------------------------//
namespace Risoluto;

//------------------------------------------------------//
// テストクラス定義
//------------------------------------------------------//
class DateTest4GenMinSec extends \PHPUnit_Framework_TestCase
{
    //------------------------------------------------------//
    // テストメソッド定義
    //------------------------------------------------------//
    /**
     * setUp()
     *
     * テストに必要な準備を実施
     */
    protected function setUp()
    {
    }

    /**
     * test_GenMinSec_NoArgs()
     *
     * GenMinSec()の挙動をテストする（引数なし）
     */
    public function test_MinSec_NoArgs()
    {
        $want = array(
            '00' => '00'
        , '01'   => '01'
        , '02'   => '02'
        , '03'   => '03'
        , '04'   => '04'
        , '05'   => '05'
        , '06'   => '06'
        , '07'   => '07'
        , '08'   => '08'
        , '09'   => '09'
        , '10'   => '10'
        , '11'   => '11'
        , '12'   => '12'
        , '13'   => '13'
        , '14'   => '14'
        , '15'   => '15'
        , '16'   => '16'
        , '17'   => '17'
        , '18'   => '18'
        , '19'   => '19'
        , '20'   => '20'
        , '21'   => '21'
        , '22'   => '22'
        , '23'   => '23'
        , '24'   => '24'
        , '25'   => '25'
        , '26'   => '26'
        , '27'   => '27'
        , '28'   => '28'
        , '29'   => '29'
        , '30'   => '30'
        , '31'   => '31'
        , '32'   => '32'
        , '33'   => '33'
        , '34'   => '34'
        , '35'   => '35'
        , '36'   => '36'
        , '37'   => '37'
        , '38'   => '38'
        , '39'   => '39'
        , '40'   => '40'
        , '41'   => '41'
        , '42'   => '42'
        , '43'   => '43'
        , '44'   => '44'
        , '45'   => '45'
        , '46'   => '46'
        , '47'   => '47'
        , '48'   => '48'
        , '49'   => '49'
        , '50'   => '50'
        , '51'   => '51'
        , '52'   => '52'
        , '53'   => '53'
        , '54'   => '54'
        , '55'   => '55'
        , '56'   => '56'
        , '57'   => '57'
        , '58'   => '58'
        , '59'   => '59'
        );

        $this->assertEquals(Date::GenMinSec(), $want);
    }

    /**
     * test_GenMinSec_Args1()
     *
     * GenMonth()の挙動をテストする（引数1つ）
     */
    public function test_GenMinSec_Args1()
    {
        $want = array(
            '' => ''
        , '00' => '00'
        , '01' => '01'
        , '02' => '02'
        , '03' => '03'
        , '04' => '04'
        , '05' => '05'
        , '06' => '06'
        , '07' => '07'
        , '08' => '08'
        , '09' => '09'
        , '10' => '10'
        , '11' => '11'
        , '12' => '12'
        , '13' => '13'
        , '14' => '14'
        , '15' => '15'
        , '16' => '16'
        , '17' => '17'
        , '18' => '18'
        , '19' => '19'
        , '20' => '20'
        , '21' => '21'
        , '22' => '22'
        , '23' => '23'
        , '24' => '24'
        , '25' => '25'
        , '26' => '26'
        , '27' => '27'
        , '28' => '28'
        , '29' => '29'
        , '30' => '30'
        , '31' => '31'
        , '32' => '32'
        , '33' => '33'
        , '34' => '34'
        , '35' => '35'
        , '36' => '36'
        , '37' => '37'
        , '38' => '38'
        , '39' => '39'
        , '40' => '40'
        , '41' => '41'
        , '42' => '42'
        , '43' => '43'
        , '44' => '44'
        , '45' => '45'
        , '46' => '46'
        , '47' => '47'
        , '48' => '48'
        , '49' => '49'
        , '50' => '50'
        , '51' => '51'
        , '52' => '52'
        , '53' => '53'
        , '54' => '54'
        , '55' => '55'
        , '56' => '56'
        , '57' => '57'
        , '58' => '58'
        , '59' => '59'
        );

        $this->assertEquals(Date::GenMinSec(true), $want);
    }

    /**
     * test_GenMinSec_Args2()
     *
     * GenMonth()の挙動をテストする（引数2つ）
     */
    public function test_GenMinSec_Args2()
    {
        $want = array(
            '--' => ''
        , '00'   => '00'
        , '01'   => '01'
        , '02'   => '02'
        , '03'   => '03'
        , '04'   => '04'
        , '05'   => '05'
        , '06'   => '06'
        , '07'   => '07'
        , '08'   => '08'
        , '09'   => '09'
        , '10'   => '10'
        , '11'   => '11'
        , '12'   => '12'
        , '13'   => '13'
        , '14'   => '14'
        , '15'   => '15'
        , '16'   => '16'
        , '17'   => '17'
        , '18'   => '18'
        , '19'   => '19'
        , '20'   => '20'
        , '21'   => '21'
        , '22'   => '22'
        , '23'   => '23'
        , '24'   => '24'
        , '25'   => '25'
        , '26'   => '26'
        , '27'   => '27'
        , '28'   => '28'
        , '29'   => '29'
        , '30'   => '30'
        , '31'   => '31'
        , '32'   => '32'
        , '33'   => '33'
        , '34'   => '34'
        , '35'   => '35'
        , '36'   => '36'
        , '37'   => '37'
        , '38'   => '38'
        , '39'   => '39'
        , '40'   => '40'
        , '41'   => '41'
        , '42'   => '42'
        , '43'   => '43'
        , '44'   => '44'
        , '45'   => '45'
        , '46'   => '46'
        , '47'   => '47'
        , '48'   => '48'
        , '49'   => '49'
        , '50'   => '50'
        , '51'   => '51'
        , '52'   => '52'
        , '53'   => '53'
        , '54'   => '54'
        , '55'   => '55'
        , '56'   => '56'
        , '57'   => '57'
        , '58'   => '58'
        , '59'   => '59'
        );

        $this->assertEquals(Date::GenMinSec(true, '--'), $want);
    }

    /**
     * test_GenMinSec_Args3()
     *
     * GenMonth()の挙動をテストする（引数3つ）
     */
    public function test_GenMinSec_Args3()
    {
        $want = array(
            '--' => '--'
        , '00'   => '00'
        , '01'   => '01'
        , '02'   => '02'
        , '03'   => '03'
        , '04'   => '04'
        , '05'   => '05'
        , '06'   => '06'
        , '07'   => '07'
        , '08'   => '08'
        , '09'   => '09'
        , '10'   => '10'
        , '11'   => '11'
        , '12'   => '12'
        , '13'   => '13'
        , '14'   => '14'
        , '15'   => '15'
        , '16'   => '16'
        , '17'   => '17'
        , '18'   => '18'
        , '19'   => '19'
        , '20'   => '20'
        , '21'   => '21'
        , '22'   => '22'
        , '23'   => '23'
        , '24'   => '24'
        , '25'   => '25'
        , '26'   => '26'
        , '27'   => '27'
        , '28'   => '28'
        , '29'   => '29'
        , '30'   => '30'
        , '31'   => '31'
        , '32'   => '32'
        , '33'   => '33'
        , '34'   => '34'
        , '35'   => '35'
        , '36'   => '36'
        , '37'   => '37'
        , '38'   => '38'
        , '39'   => '39'
        , '40'   => '40'
        , '41'   => '41'
        , '42'   => '42'
        , '43'   => '43'
        , '44'   => '44'
        , '45'   => '45'
        , '46'   => '46'
        , '47'   => '47'
        , '48'   => '48'
        , '49'   => '49'
        , '50'   => '50'
        , '51'   => '51'
        , '52'   => '52'
        , '53'   => '53'
        , '54'   => '54'
        , '55'   => '55'
        , '56'   => '56'
        , '57'   => '57'
        , '58'   => '58'
        , '59'   => '59'
        );

        $this->assertEquals(Date::GenMinSec(true, '--', '--'), $want);
    }
}